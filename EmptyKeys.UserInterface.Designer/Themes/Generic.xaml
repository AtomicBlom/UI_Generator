<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:EmptyKeys.UserInterface.Designer"
    xmlns:charts="clr-namespace:EmptyKeys.UserInterface.Designer.Charts">

    <Style TargetType="{x:Type local:UIRoot}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:UIRoot}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:NumericTextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="TextAlignment" Value="Right" />
    </Style>

    <Style TargetType="{x:Type charts:Chart}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type charts:Chart}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"                            
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Canvas Name="Canvas" Margin="25">
                            <Line X1="0" Y1="0" X2="0" Y2="{Binding ElementName=Canvas, Path=ActualHeight}"
                                  Stroke="White" StrokeThickness="2" VerticalAlignment="Stretch" />
                            <Line X1="0" Y1="{Binding ElementName=Canvas, Path=ActualHeight}" X2="{Binding ElementName=Canvas, Path=ActualWidth}" Y2="{Binding ElementName=Canvas, Path=ActualHeight}"
                                  Stroke="White" StrokeThickness="2" VerticalAlignment="Stretch" />

                            <Line X1="0" Y1="{Binding ElementName=Canvas, Path=ActualHeight}" X2="{Binding ElementName=Canvas, Path=ActualWidth}" Y2="0"
                                  Stroke="Orange" StrokeThickness="1" VerticalAlignment="Stretch" />

                        </Canvas>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ImageButtonTemplate" TargetType="{x:Type local:ImageButton}">
        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
            <StackPanel Orientation="Horizontal" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                <Image Name="PART_Image" Source="{TemplateBinding ImageNormal}" />
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </StackPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="PART_Image" Property="Source" Value="{Binding ImageHover, RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="PART_Image" Property="Source" Value="{Binding ImagePressed, RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="PART_Image" Property="Source" Value="{Binding ImageDisabled, RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type local:ImageButton}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource ImageButtonTemplate}" />
    </Style>
</ResourceDictionary>
